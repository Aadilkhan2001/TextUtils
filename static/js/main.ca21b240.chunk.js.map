{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","theme","dark","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","showalert","settheme","setdark","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","uptext","toUpperCase","toLowerCase","data","SpeechSynthesisUtterance","speechSynthesis","speak","length","split","About","Alert","alert","role","word","lower","charAt","slice","CapitalFirstLatter","message","defaultProps","about","App","_useState3","_useState4","setalert","_useState5","_useState6","document","body","style","backgroundColor","color","showAlert","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ca21b240.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  const LightMode = () => {\r\n    props.showalert('light theme enabled', 'success');\r\n    props.settheme('light');\r\n  }\r\n  const YellowMode = () => {\r\n    props.showalert('yellow theme enabled', 'success');\r\n    props.settheme('yellow');\r\n\r\n  }\r\n  const RedMode = () => {\r\n    props.showalert('red theme enabled', 'success');\r\n    props.settheme('red');\r\n\r\n  }\r\n\r\n  const MagentaMode = () => {\r\n    props.showalert('magenta theme enabled', 'success');\r\n    props.settheme('magenta');\r\n  }\r\n\r\n  const ChangeDark = () =>{\r\n    if(props.dark === false)\r\n    {\r\n      props.setdark(true);\r\n      props.showalert('dark theme enabled!!','success');\r\n    }\r\n    else\r\n    {\r\n      props.setdark(false);\r\n      props.showalert('dark theme disabled!!','success');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg \r\n    ${props.theme === 'yellow' && props.dark === true ? 'darkyellow1'\r\n    : props.theme === 'yellow' ? 'yellow' \r\n    : props.theme === 'red' && props.dark === true ? 'darkred1'\r\n    : props.theme === 'red' ? 'red' \r\n    : props.theme === 'magenta' && props.dark === true ? 'darkmagenta1' \r\n    : props.theme === 'magenta' ? 'magenta'\r\n    : props.theme ==='light' && props.dark === true ? 'dark1'\r\n    :'navbar-light bg-light'} text-${props.dark === true ? 'light' :'dark'}`\r\n    \r\n    }>\r\n\r\n\r\n      <div className=\"container-fluid\">\r\n        <a className={`navbar-brand text text-${props.dark === true ? 'light' : 'dark'}`} href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className={`nav-link active text text-${props.dark === true ? 'light' : 'dark'}`} aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className={`nav-link active text text-${props.dark === true ? 'light' : 'dark'}`} href=\"\">{props.about}</a>\r\n            </li> */}\r\n          </ul>\r\n\r\n\r\n\r\n          <div>\r\n            Select Your Theme Color\r\n          </div>\r\n          <button className=\"dot yellow mx-2\" onClick={YellowMode}></button>\r\n          <button className=\"dot red mx-2\" onClick={RedMode}></button>\r\n          <button className=\"dot magenta mx-2\" onClick={MagentaMode}></button>\r\n          <button className=\"dot bg-light mx-2\" onClick={LightMode}></button>\r\n          <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={ChangeDark}  id=\"flexSwitchCheckChecked\" />\r\n            <label className={`form-check-label text text-${props.dark === true ? 'light' : 'dark'}`} htmlFor=\"flexSwitchCheckChecked\">Dark Mode</label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </nav>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Title Text here',\r\n  about: \"About Text here\"\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Textform(props) {\r\n\r\n  // convert text into upper case\r\n  const convertUpper = () => {\r\n    let uptext = text.toUpperCase();\r\n    setText(uptext);\r\n    props.showalert(\"converted in uppercase!!!\",'success');\r\n\r\n  }\r\n\r\n\r\n  // convert text into lower case\r\n  const convertLower = () => {\r\n    let uptext = text.toLowerCase();\r\n    setText(uptext);\r\n    props.showalert(\"converted in lowercase!!!\",'success');\r\n  }\r\n\r\n  //alllow user to type in text box when state is changed\r\n  const changeText = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n  //Convert text into speech\r\n  const SpeakText = () => {\r\n    let data = new SpeechSynthesisUtterance(text);\r\n    speechSynthesis.speak(data);\r\n    props.showalert(\"speaking!!!!!\",'success');\r\n  }\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n\r\n          <h1 className='text-center'>{props.heading}</h1>\r\n\r\n          <textarea className={`form-control \r\n              ${props.theme === 'yellow' && props.dark === true ? 'darkyellow1'\r\n              : props.theme === 'yellow' ? 'yellow' \r\n              : props.theme === 'red' && props.dark === true ? 'darkred1'\r\n              : props.theme === 'red' ? 'red' \r\n              : props.theme === 'magenta' && props.dark === true ? 'darkmagenta1' \r\n              : props.theme === 'magenta' ? 'magenta'\r\n              : props.theme ==='light' && props.dark === true ? 'dark1'\r\n              :'bg-light'} text text-${props.dark === true ? 'light' : 'dark'}`} \r\n              value={text} onChange={changeText} id=\"textbox\" rows=\"8\">\r\n          </textarea>\r\n\r\n\r\n        <div className=\"my-3\">\r\n\r\n        <button className=\r\n                  {`${props.theme === 'yellow' && props.dark === true ? 'btn darkyellow1'\r\n                  : props.theme === 'yellow' ? 'btn yellow' \r\n                  : props.theme === 'red' && props.dark === true ? 'btn darkred1'\r\n                  : props.theme === 'red' ? 'btn red' \r\n                  : props.theme === 'magenta' && props.dark === true ? 'btn darkmagenta1' \r\n                  : props.theme === 'magenta' ? 'btn magenta'\r\n                  : props.theme ==='light' && props.dark === true ? 'btn dark1'\r\n                  :'btn btn-primary'}`} onClick={convertUpper}>\r\n              Convert Uppercase\r\n        </button>\r\n        <button className=\r\n                  {`${props.theme === 'yellow' && props.dark === true ? 'btn darkyellow1'\r\n                  : props.theme === 'yellow' ? 'btn yellow' \r\n                  : props.theme === 'red' && props.dark === true ? 'btn darkred1'\r\n                  : props.theme === 'red' ? 'btn red' \r\n                  : props.theme === 'magenta' && props.dark === true ? 'btn darkmagenta1' \r\n                  : props.theme === 'magenta' ? 'btn magenta'\r\n                  : props.theme ==='light' && props.dark === true ? 'btn dark1'\r\n                  :'btn btn-primary'} mx-2`} onClick={convertLower}>\r\n              Convert Lowercase\r\n        </button>\r\n        <button className=\r\n                  {`${props.theme === 'yellow' && props.dark === true ? 'btn darkyellow1'\r\n                  : props.theme === 'yellow' ? 'btn yellow' \r\n                  : props.theme === 'red' && props.dark === true ? 'btn darkred1'\r\n                  : props.theme === 'red' ? 'btn red' \r\n                  : props.theme === 'magenta' && props.dark === true ? 'btn darkmagenta1' \r\n                  : props.theme === 'magenta' ? 'btn magenta'\r\n                  : props.theme ==='light' && props.dark === true ? 'btn dark1'\r\n                  :'btn btn-primary'}`} onClick={SpeakText}>\r\n              Speak\r\n        \r\n        </button>\r\n\r\n        </div>\r\n\r\n      \r\n\r\n        <h3>Text Summary</h3>\r\n        <p>\r\n          {text.length} charachters {text.split(\" \").length  - 1 } words\r\n        </p>\r\n\r\n        <p>{(text.split(\" \").length - 1 ) * 0.008} Minuites to read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length > 0 ? text : \"Enter a text and show the previw\"}</p>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n\r\n}\r\nTextform.propTypes = {\r\n  heading: PropTypes.string,\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n  return (\r\n    <>\r\n    <h1 className='text text-center mtb-20'>{props.heading}</h1>\r\n   <div className='container shadow shadow-rounded'>\r\n        <h4>\r\n        We provide free tools to help you with your daily tasks. You will find tools for formatting source code, converters, tools for handling text, such as convert your sentance in uppercase, convert your sentance in lowercase, convert your sentance in speech. Check the current features below and feel free to recommend a new feature by contacting us.\r\n        </h4>\r\n      \r\n    </div>\r\n    </> \r\n  )\r\n  \r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const CapitalFirstLatter = (word)=>{\r\n    let lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{CapitalFirstLatter(props.alert.message)}</strong>\r\n</div>\r\n  )\r\n}\r\n","import './App.css'\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\nimport About from './components/About'\nimport Alert from './components/Alert'\nimport React from 'react'\nimport { useState } from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [theme, settheme] = useState('light');\n  const [alert, setalert] = useState(null);\n  const [dark,setdark] = useState(false);\n  \n\n  if( dark === true && theme === 'yellow' )\n  {\n    document.body.style.backgroundColor='#58580d';\n    document.body.style.color='white';\n  }\n  else if( dark === true && theme === 'red' )\n  {\n    document.body.style.backgroundColor='#701010';\n    document.body.style.color='white';\n  }\n  else if( dark === true && theme === 'magenta' )\n  {\n    document.body.style.backgroundColor='#681768';\n    document.body.style.color='white';\n  }\n  else if( dark === true && theme === 'light' )\n  {\n    document.body.style.backgroundColor='#212529';\n    document.body.style.color='white';\n  }\n  else\n  {\n    document.body.style.backgroundColor='white';\n    document.body.style.color='black'\n  }\n\n\n  \n \n\n  const showAlert = (message, type) => {\n    setalert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" about=\"About\" setdark={setdark} dark={dark} theme={theme} showalert={showAlert} settheme={settheme} />\n      <Alert alert={alert} />\n      {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About heading=\"About Us\" />}/> */}\n          <Textform heading=\"Enter text to analyze\" theme={theme} dark={dark} showalert={showAlert} />\n          <About heading=\"About Us\" />\n          {/* <Route exact path=\"/\" element={<Textform heading=\"Enter text to analyze\" theme={theme} dark={dark} showalert={showAlert} />}/> */}\n          \n        {/* </Routes> */}\n      \n      {/* // </Router> */}\n     \n    </>\n  );\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}